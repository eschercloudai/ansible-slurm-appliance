---
- name: Terminate systemd user sessions for absent users
  terminate_user_sessions:
    user: "{{ item.name }}"
  loop: "{{ basic_users_users }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - "item.state | default('present') == 'absent'"
  
- name: Create users and generate public keys
  user: "{{ basic_users_userdefaults | combine(item) | filter_user_params() }}"
  loop: "{{ basic_users_users }}"
  loop_control:
    label: "{{ item.name }} [{{ item.state | default('present') }}]"
  register: basic_users_info

- name: Write supplied public key as authorized for SSH access
  authorized_key:
    user: "{{ item[0].name }}"
    state: present
    key: "{{ item[1] }}"
  loop: "{{ lookup('subelements', basic_users_users, 'public_keys', {'skip_missing': True } ) }}"
  loop_control:
    label: "{{ item.0.name }} [{{ item[0].state | default('present') }}]"
  when:
    - item[0].state | default('present') == 'present'
    - item[1] is defined 
    - basic_users_manage_homedir
  run_once: true

- name: Write generated public key as authorized for SSH access
  authorized_key:
    user: "{{ item.name }}"
    state: present
    manage_dir: no
    key: "{{ item.ssh_public_key }}"
  loop: "{{ hostvars[ansible_play_hosts | first].basic_users_info.results }}"
  loop_control:
    label: "{{ item.name }}"
  when:
  - item.ssh_public_key is defined
  - basic_users_manage_homedir
  run_once: true
